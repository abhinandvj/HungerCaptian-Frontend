{"ast":null,"code":"import axios from 'axios';\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\nvar baseURL;\nbaseURL = 'http://127.0.0.1:8000';\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/**\r\n * Add requireToken: true in request config, for API that required Authorization token\r\n */\n\napi.interceptors.request.use(config => {\n  if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.getPosts = async params => {\n      try {\n        const response = await api.get('/posts/', {\n          params\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.addPost = async postBody => {\n      const formData = new FormData();\n\n      for (const key in postBody) {\n        formData.append(key, postBody[key]);\n      }\n\n      try {\n        const response = await api.post('/posts/add/', formData);\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.deletePost = async id => {\n      try {\n        return await api.delete(`/posts/delete/${id}/`);\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.getItems = async category => {\n      let url = \"/items/\";\n\n      if (category) {\n        url += \"?category=\" + category;\n      }\n\n      const items = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return items;\n    };\n\n    this.getReviews = async item_id => {\n      let url = \"/reviews/?item_id=\" + item_id;\n      const reviews = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return reviews;\n    };\n\n    this.writeReview = async (item_id, name, body, like_count) => {\n      const formData = new FormData();\n      formData.append(\"item\", item_id);\n      formData.append(\"name\", name);\n      formData.append(\"body\", body);\n      formData.append(\"like_count\", like_count);\n      const savedReview = await api.post(\"/reviews/add\", formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedReview;\n    };\n  }\n\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","api","create","headers","interceptors","request","use","config","requireToken","localStorage","getItem","common","JSON","parse","token","err","console","error","API","getPosts","params","response","get","data","Error","addPost","postBody","formData","FormData","key","append","post","deletePost","id","delete","getItems","category","url","items","then","catch","getReviews","item_id","reviews","writeReview","name","body","like_count","savedReview"],"sources":["/Users/apple/Downloads/hunger-cap/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\r\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\r\n\r\nvar baseURL;\r\n\r\nbaseURL = 'http://127.0.0.1:8000';\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: baseURL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n/**\r\n * Add requireToken: true in request config, for API that required Authorization token\r\n */\r\napi.interceptors.request.use(\r\n    config => {\r\n        if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\r\n            config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\r\n        }\r\n\r\n        return config;\r\n    },\r\n    err => {\r\n        console.error(err);\r\n    }\r\n);\r\n\r\nexport default class API {\r\n     \r\n    getPosts = async params => {\r\n        try {\r\n            const response = await api.get('/posts/', { params });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    };\r\n    addPost = async postBody => {\r\n        const formData = new FormData();\r\n\r\n        for (const key in postBody) {\r\n            formData.append(key, postBody[key]);\r\n        }\r\n\r\n        try {\r\n            const response = await api.post('/posts/add/', formData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    };\r\n    deletePost = async id => {\r\n        try {\r\n            return await api.delete(`/posts/delete/${id}/`);\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    };\r\n    getItems = async (category) => {\r\n    let url = \"/items/\";\r\n    if (category) {\r\n      url += \"?category=\" + category;\r\n    }\r\n    const items = await api\r\n      .get(url)\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    return items;\r\n  };\r\n  ////////////////////////////////\r\n  // Review\r\n  ////////////////////////////////\r\n \r\n  getReviews = async (item_id) => {\r\n    let url = \"/reviews/?item_id=\"+item_id;\r\n    const reviews = await api\r\n      .get(url)\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    return reviews;\r\n  };\r\n  writeReview = async (item_id, name, body, like_count) => {\r\n    const formData = new FormData();\r\n    formData.append(\"item\", item_id);\r\n    formData.append(\"name\", name);\r\n    formData.append(\"body\", body);\r\n    formData.append(\"like_count\", like_count);\r\n    const savedReview = await api\r\n      .post(\"/reviews/add\", formData)\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n    return savedReview;\r\n  };\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}